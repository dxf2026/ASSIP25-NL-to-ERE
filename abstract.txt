Runtime-verification (RV) tools built off of the Monitoring Oriented Programming framework (MOP), specifically TraceMOP and JavaMOP, verify that execution traces satisfy formalised runtime properties. These runtime properties require logic to be written in a supported formal language, for example linear temporal logic, finite state machines, and extended regular expression (ERE). ERE is a popular choice, as it is built off of the widely used regular expression (RE). However, the additional constructs in ERE results in a high barrier of entry, even for developers knowledgeable in RE. We propose an algorithm to enumeratively develop EREs.
